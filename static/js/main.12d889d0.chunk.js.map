{"version":3,"sources":["pages/Home.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","root","display","flexWrap","justifyContent","paper","minHeight","media","width","minWidth","skills","fontVariant","fontSize","border","borderStyle","borderRadius","margin","padding","background","fontWeight","textDecoration","color","contact","items","links","borderBottomStyle","header","textAlign","Home","classes","Grid","container","spacing","className","item","xs","Card","sm","CardContent","Typography","gutterBottom","variant","component","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kQAYMA,EAAYC,YAAW,CACzBC,KAAM,CACFC,QAAS,OACTC,SAAU,OACVC,eAAgB,iBAEpBC,MAAO,CACHC,UAAW,OACXJ,QAAS,OACTC,SAAU,OACVC,eAAgB,gBAEpBG,MAAO,CACHC,MAAO,OACPF,UAAW,IACXG,SAAU,KAEdC,OAAQ,CACJC,YAAa,iBACbC,SAAU,QACVC,OAAQ,OACRC,YAAa,SACbC,aAAc,MACdC,OAAQ,kBACRC,QAAS,MACTC,WAAY,UACZC,WAAY,OACZC,eAAgB,OAChBC,MAAO,WAEXC,QAAS,CACLN,OAAQ,qBAEZO,MAAO,CACHP,OAAQ,OAEZQ,MAAO,CACHH,MAAO,QACPI,kBAAmB,SACnBZ,OAAQ,QAEZa,OAAQ,CACJC,UAAW,OACXV,QAAS,KACTD,OAAQ,QAID,SAASY,IAGpB,IAAMC,EAAU9B,IAEhB,OACI,cAAC+B,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGC,UAAWJ,EAAQ5B,KAA/C,SACI,cAAC6B,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAf,SACI,cAACC,EAAA,EAAD,UAEI,cAACN,EAAA,EAAD,CAAMC,WAAS,EAACE,UAAWJ,EAAQ5B,KAAnC,SACI,cAAC6B,EAAA,EAAD,CAAMI,MAAI,EAACG,GAAI,EAAf,SACI,cAACC,EAAA,EAAD,CAAaL,UAAWJ,EAAQH,OAAhC,SACI,cAACa,EAAA,EAAD,CAAYC,cAAY,EAACC,QAAQ,KAAKC,UAAU,KAAhD,uCC/DjB,SAASC,IACpB,OACI,cAAC,IAAD,UACI,cAAC,IAAD,UACI,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIH,UAAWd,QCdjD,IAYekB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACd,EAAD,MAEFe,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.12d889d0.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport CardActions from '@material-ui/core/CardActions';\nimport Icon from '@material-ui/core/Icon';\nimport Link from '@material-ui/core/Link';\n\nconst useStyles = makeStyles({\n    root: {\n        display: 'flex',\n        flexWrap: \"wrap\",\n        justifyContent: \"space-between\"\n    },\n    paper: {\n        minHeight: \"65px\",\n        display: 'flex',\n        flexWrap: \"wrap\",\n        justifyContent: \"space-evenly\"\n    },\n    media: {\n        width: \"100%\",\n        minHeight: 250,\n        minWidth: 250,\n    },\n    skills: {\n        fontVariant: \"all-small-caps\",\n        fontSize: \"large\",\n        border: \"thin\",\n        borderStyle: \"dotted\",\n        borderRadius: \"5px\",\n        margin: \"5px 5px 5px 8px\",\n        padding: \"5px\",\n        background: \"#dbe9f1\",\n        fontWeight: \"bold\",\n        textDecoration: \"none\",\n        color: \"#0a3f5e\"\n    },\n    contact: {\n        margin: \"20px 10px 0px 0px\",\n    },\n    items: {\n        margin: \"5px\",\n    },\n    links: {\n        color: \"black\",\n        borderBottomStyle: \"dotted\",\n        border: \"thin\",\n    },\n    header: {\n        textAlign: \"left\",\n        padding: \"5%\",\n        margin: \"1%\"\n    }\n});\n\nexport default function Home() {\n    // const {firstName, headline, profilePic} = data\n    // const profilepic= \"images/\" + profilePic;\n    const classes = useStyles();\n\n    return (\n        <Grid container spacing={5} className={classes.root}>\n            <Grid item xs={12}>\n                <Card>\n                    {/* Container within the card for flex grid */}\n                    <Grid container className={classes.root}>\n                        <Grid item sm={5}>\n                            <CardContent className={classes.header}>\n                                <Typography gutterBottom variant=\"h2\" component=\"h2\">\n                                    Hi, I'm Tammy\n                                </Typography>\n                            </CardContent>\n                        </Grid>\n                    </Grid>\n                </Card>\n            </Grid>\n        </Grid>\n    );\n\n    // return (\n    //     <h1>Service Details</h1>\n    // );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n  BrowserRouter as Router, Switch, Route\n} from 'react-router-dom';\n\nimport Home from './pages/Home';\n// All of our CSS\n// import './static/css/main.scss';\n\nexport default function App() {\n    return (\n        <Router>\n            <Switch>\n                <Route exact path=\"/\" component={Home}/>\n                {/* Only useful in development mode */}\n                {/*<Route component={NotFound} status={404} />*/}\n            </Switch>\n        </Router>\n    );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}